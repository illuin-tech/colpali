config:
  (): colpali_engine.trainer.colmodel_training.ColModelTrainingConfig
  output_dir: !path models/colsmolvlm
  processor:
    (): colpali_engine.utils.transformers_wrappers.AllPurposeWrapper
    class_to_instanciate: !ext colpali_engine.models.ColIdefics3Processor
    pretrained_model_name_or_path:  "HuggingFaceTB/SmolVLM2-256M-Video-Instruct"
    # num_image_tokens: 2048
    # max_length: 50

  model:
    (): colpali_engine.utils.transformers_wrappers.AllPurposeWrapper
    class_to_instanciate: !ext colpali_engine.models.ColIdefics3
    pretrained_model_name_or_path: "HuggingFaceTB/SmolVLM2-256M-Video-Instruct"
    torch_dtype:  !ext torch.bfloat16
    # use_cache: false
    attn_implementation: "flash_attention_2"
#    device_map: "auto"
#    quantization_config:
#      (): transformers.BitsAndBytesConfig
#      load_in_4bit: true
#      bnb_4bit_quant_type: "nf4"
#      bnb_4bit_compute_dtype:  "bfloat16"
#      bnb_4bit_use_double_quant: true

  train_dataset:
    (): colpali_engine.utils.dataset_transformation.load_train_set_ir_negs
      
  # max_length: 50
  run_eval: false
  loss_func:
    (): colpali_engine.loss.bi_encoder_losses.BiEncoderLoss
  tr_args:
    (): transformers.training_args.TrainingArguments
    output_dir: ./checkpoints/test
    overwrite_output_dir: true
    num_train_epochs: 1
    per_device_train_batch_size: 32
    gradient_checkpointing: true
    gradient_checkpointing_kwargs: { "use_reentrant": false }
    # gradient_checkpointing: true
    # 6 x 8 gpus = 48 batch size
    # gradient_accumulation_steps: 4
    per_device_eval_batch_size: 32
    eval_strategy: "no"
    dataloader_num_workers: 4
    # bf16: true
    save_steps: 500
    logging_steps: 10
    eval_steps: 100
    warmup_steps: 100
    learning_rate: 5e-4
    save_total_limit: 1
    # resume_from_checkpoint: true
    # optim: "paged_adamw_8bit"
    # wandb logging
    # wandb_project: "debug"
    run_name: "smolembedder"
    report_to: "wandb"


  peft_config:
    (): peft.LoraConfig
    r: 32
    lora_alpha: 32
    lora_dropout: 0.1
    init_lora_weights: "gaussian"
    bias: "none"
    task_type: "FEATURE_EXTRACTION"
    target_modules: '(.*(model.text_model).*(down_proj|gate_proj|up_proj|k_proj|q_proj|v_proj|o_proj).*$|.*(custom_text_proj).*$)'
    # target_modules: '(.*(language_model).*(down_proj|gate_proj|up_proj|k_proj|q_proj|v_proj|o_proj).*$|.*(custom_text_proj).*$)'